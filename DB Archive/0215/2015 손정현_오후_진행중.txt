select * from user;

create table gradeinfo(
grade varchar(1),
name varchar(8));
--name은 반이름입니다. 
insert into gradeinfo values ('A','코끼리반');
insert into gradeinfo values ('B','광어반');
insert into gradeinfo values ('C','우럭반');
insert into gradeinfo values ('D','도다리반');
insert into gradeinfo values ('E','장어반');

// user table과 gradeinfo table로 풀이하세요.

1. 포인트가 90이상인 사람의 이름과 포인트와, 나이를 출력하시오.

출력하시오->DML->SELECT->이름,포인트,나이
포인트가 90이상->WHERE조건 

답)
SELECT name, point, age
FROM user
WHERE point>=90;
증빙)
육길동	100	29
김을수	99	35
김길동	1000	30
홍길동	2000	30
이미미	700	45





2. grade가 A 사람의 이름과 포인트, 나이와  grade를 출력하시오. 

출력하시오->DML->SELECT->이름, 포인트, 나이
grade A->WHERE조건

답)
SELECT name, point, age
FROM user
WHERE grade='A' ;
증빙)
팔길동	60	42
오길동	80	55
사길동	79	18
홍길동	2000	30
이미미	700	45






3. grade가 C인 사람은 모두 몇명입니까?

검색->DML->SELECT->모두 몇 명->COUNT()
grade가 'C'->WHERE

답)
SELECT count(*)
FROM user
WHERE grade = 'C' ;
증빙)
C	1


4. grade가 A,B,C인 사람의 평균 포인트를 구하시오.

구하시오->DML->SELECT->평균 포인트 ->avg(point)
grade가 A,B,C->WHERE조건->grade in ('A','B','C')
                 ->GROUP BY grade HAVING grade in ('A','B','C')  
답)
SELECT avg(point)
FROM user
WHERE grade in ('A','B','C');
증빙)
583.8000	
80.0000	
550.0000	
참고-----그룹-
583.8000	A
80.0000	C
550.0000	B






5. 모든 사람의 정보를 출력하되. 이름, 나이, 반이름을 출력하시오.

출력하시오->DML->SELECT->이름,나이,반이름
모든사람의 정보->WHERE조건 없음

이름,나이->user 테이블 / 반이름->gradeinfo테이블에 있으므로 두 테이블을 join해야한다.
학년이 동일한 값만 join하면 되므로 inner join을 한다.->inner join은 left,right 그런거 없다.
쪼개1)
SELECT *
FROM user u inner join gradeinfo g 
on u.grade=g.grade;


SELECT u.name, u.age, g.name
FROM user u inner join gradeinfo g 
on u.grade=g.grade; 
구길동	10	도다리반
팔길동	42	코끼리반
칠길동	31	우럭반
육길동	29	광어반
오길동	55	코끼리반
사길동	18	코끼리반
김을수	35	도다리반
김길동	30	광어반
홍길동	30	코끼리반
이미미	45	코끼리반







6. 반은 등록되어 있으나 사람이 배정되지 않은 반이름 출력하시오.

출력하시오->DML->SELECT->반이름
반은 등록되어 있으나 배정되지 않은 반이름->user 테이블과 gradeinfo테이블을 outer조인한다.
left 000 테이블 안에 inner join 외에 null로 억지로 합쳐진 튜플이 있나 확인
->억지로 합친 테이블의 아무 속성명의 속성값이 null로 되어 있을 것.

확인하기1)
select * from user u left outer join gradeinfo g on u.grade=g.grade;
1	j	1111	구길동	10	D	30	D	도다리반
2	i	1111	팔길동	42	A	60	A	코끼리반
3	h	0000	칠길동	31	C	80	C	우럭반
4	g	1111	육길동	29	B	100	B	광어반
5	f	1111	오길동	55	A	80	A	코끼리반
6	e	1111	사길동	18	A	79	A	코끼리반
8	c	1111	김을수	35	D	99	D	도다리반
9	b	1111	김길동	30	B	1000	B	광어반
10	a	1111	홍길동	30	A	2000	A	코끼리반
11	abcdefghi	1111	이미미	45	A	700	A	코끼리반
null이 없으니 대상 테이블이 틀렸나봄.
확인하기2)
select * from user u right outer join gradeinfo g on u.grade=g.grade;
11	abcdefghi	1111	이미미	45	A	700	A	코끼리반
10	a	1111	홍길동	30	A	2000	A	코끼리반
6	e	1111	사길동	18	A	79	A	코끼리반
5	f	1111	오길동	55	A	80	A	코끼리반
2	i	1111	팔길동	42	A	60	A	코끼리반
9	b	1111	김길동	30	B	1000	B	광어반
4	g	1111	육길동	29	B	100	B	광어반
3	h	0000	칠길동	31	C	80	C	우럭반
8	c	1111	김을수	35	D	99	D	도다리반
1	j	1111	구길동	10	D	30	D	도다리반
							E	장어반
->장어반 학생이 null값이 있으므로 방은 등록되어있으나 배정된 사람이 없는 것을 알 수 있음.

값이 NULL인 장어반만 출력하게 하려면 WHERE 조건을 사용한다.
WHERE u.no is null
이때 u. 의 어느 속성명을 넣어도 된다.

문제가 반이름을 구하는 것이므로
SELECT에 반이름을 추가한다.

답)
SELECT g.name
FROM user u right outer join gradeinfo g on u.grade=g.grade
WHERE u.no is null
증빙)
장어반






7. 도다리반으로 검색하여 도다리반에 있는 사람의 정보를 출력하시오.
   아이디, 이름, 반이름





9. 반이름별 몇명의 사람이 있는지 출력하시오.. 반이름, 인원수





10. 학생이 1명이하인 반을 병합하려고 합니다. 학생이 1명 이하인 반이름과 인원수를 출력하시오.





11. 나이가       30대인 사람의 이름, 나이, grade를 출력하시오. 