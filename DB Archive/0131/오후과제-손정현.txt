create table users(
no int primary key,
name varchar2(10),
addr varchar2(10),
point number,
grade varchar2(1),
jumin varchar2(8));


​

insert into users values (1,'kimsu','suwon',99.12,1,'820405-1');
insert into users values (2,'leesu','suwon city',89.00,2,'970805-2');
insert into users values (3,'choihee','seoul',88.21,1,'910204-2');
insert into users values (4,'leesil','suwon',77.62,4,'850405-1');
insert into users values (5,'james','seoul',60.22,1,'871105-1');
insert into users values (6,'parksuji','suwon',90.12,3,'880405-2');
insert into users values (7,'kimrae','yougin',89.96,3,'820105-1');
insert into users values (8,'sangJin','youngin',99.31,3,'990420-2');
insert into users values (9,'Leechan','incheon',79.12,2,'970605-2');
insert into users values (10,'kimmi','incheon',79.92,1,'810505-1');
insert into users values (11,'ryusu','seoul',85.32,4,'861205-2');
insert into users values (12,'Gosu',null,82.13,4,'810715-1');

​

목표문제

1. 모든 사람들의 이름과 점수와 생년월일을 검색하시오. 

(순서)
1. 검색해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 검색해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. 이름, 점수, 생년월일은 검색할 대상이기 때문에 SELECT, FROM은 대상 테이블이고 대상 테이블명은 users, 모든 사람의 튜플을 보는 것이기 때문에 WHERE 조건은 붙지 않는다.
5. 답:
select name,point,jumin
from users;







2. 80점 이상의 사람의 이름과 주소, 점수를 검색하시오.

(순서)
1. 검색해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 검색해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. 이름, 점수, 주소는 검색할 대상이기 때문에 SELECT, 
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   80점 이상의 사람의 튜플만 보는 것이기 때문에 WHERE 뒤에 80점 이상의 사람을 조건으로 한다. 
   + 이상은 >=, 이하는 <=로 표현할 수 있고 =를 없애면 초과,미만으로 표현이 가능하다.
5. 답:
select name,addr,point
from users
where point>=80;










3. 이름이 kim으로 시작되는 사람의 이름과 주소와 점수를 검색하시오.

(순서)
1. 검색해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 검색해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. 이름, 점수, 주소는 검색할 대상이기 때문에 SELECT, 
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   이름이 kim으로 시작되는 사람의 튜플만 보는 것이기 때문에 WHERE 뒤에 이름이 kim으로 시작되는 사람을 조건으로 한다. 
   + 해당문자가 포함된 문자를 찾는 방법은 '%해당문자%'이다.
5. 답:
select name,addr,point
from users
where name like '%kim%';








4. 현재 점수에서 +10으로 보정한 점수를 출력하시오.
   단. 100점을 넘을 수 있습니다. 원본 데이터에 반영되지 않습니다.

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 출력과 원본데이터에 반영되지 않아야 하기 때문에 SELECT를 사용한다. 
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 현재 점수에서 +10으로 보정한 점수이다. SELECT는 출력해서 보이는 값이기 때문에 서브쿼리 없이도 원본데이터에 반영되지 않는다.
   +더해서 보이는 방법은 속성명+(숫자)이다.
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   제한해서 봐야하는 튜플 조건이 없기 때문에 WHERE은 쓰지 않는다.
5. 답:
select point + (10)
from users;






5. 1학년의 점수를 +1점씩 올려서 출력하세요. (단, 원본 데이터에 반영되지 않습니다.)

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 출력과 원본데이터에 반영되지 않아야 하기 때문에 SELECT를 사용한다. 
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 +1점씩 올린 점수이다. SELECT는 출력해서 보이는 값이기 때문에 서브쿼리 없이도 원본데이터에 반영되지 않는다.
   +더해서 보이는 방법은 속성명+(숫자)이다.
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   1학년의 점수라는 제한적인 튜플이 있기 때문에 WHERE뒤에 1학년의 점수가 나온다.
5. 답:
select point +(1)
from users
where grade=1;






6. B등급을 획득한 사람의 이름, 주소, 점수를 출력하세요 (B등급 80점 이상 90점 미만입니다)

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML 로 분류한다.
2. 검색해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 이름, 주소, 점수이고 
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 B등급을 획득한 사람이라는 조건이 있고 B등급은 80점 이상 90점 미만이다. 
   + 이상과 이하가 아닌 80점이상, 90점미만이기 때문에  80 AND 90으로 쓰지 않고 80점 이상 그리고 90점 미만으로 나눠서 적었다.
5. 답:
select name, addr, point
from users
where point >=80 and point<90;






7. select * from users; 쿼리 결과 중 NULL은 실제 입력하지 않은 값입니다.
   주소를 입력하지 않은 학생의 이름과, 주소, 학년, 점수, 주민번호를 출력하세요

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML로 분류한다.
2. 출력해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 이름과, 주소, 학년, 점수, 주민번호이고
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 주소를 입력하지 않은 학생이기 때문에 주소가 없는 것이 조건이 된다.
   +입력하지 않은 것은 NULL이라고 명시되어있기 때문에 addr is null이라는 조건이 나온다.
5. 답:
select name, addr, grade, point, jumin
from users
where addr is null;






8. 4학년의 점수를 10%로 올린 점수를 계산하세요. 
   (단, 원본데이터는 반영되지 않는다)

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML로 분류한다.
2. 출력과 원본데이터에 반영되지 않아야 하기 때문에 UPDATE가 아닌 SELECT를 사용한다. UPDATE는 원본 데이터에 반영되기 때문이다. 
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 10%로 올린 점수이다. + %를 계산하는 방법은 (point *0.n)이다. 문제에서는 point에 10% 더하라고 했기 때문에 point+(point*0.1)이다.
   더 간편하게 작성하는 방법은 point*1.1이다. 덧붙이자면 point*1.2는 20%를 더한 값, point*1.3은 30%을 더한 결과값이 나오게 된다. 
   select point, point(point*0.1) point를 출력하되, point(point*0.1)를 계산한 값을 출력하라는 뜻으로 해석된다.
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 4학년의 점수이다.
5. 답:
select point, point(point*0.1)
from users
where grade=4;








9. 점수가 낮은 학생부터 출력하세요.  번호, 이름, 주소, 포인트

(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML로 분류한다.
2. 출력해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELET는 번호,이름,주소,포인트이다.
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 모든 학생이기 때문에 적지 않는다.
   정렬조건이 제시되어있기 때문에 ODER BY를 사용하고 점수가 낮은 학생부터이기 때문에 점수가 점점 낮아지는 오름차순으로 정렬해야 한다. 
   +오름차순 정렬은 asc
5. 답:
select no, name, addr, point
from users
order by point asc;








10. 학년을 오름차순으로 정렬하시오, 단 학년이 동일 할 경우 포인트가 높은 사람이 먼저 출력됩니다.
     출력은 번호, 이름, 학년, 포인트 


(순서)
1. 출력해야 한다-튜플을 CRVD연산하는 DML로 분류한다.
2. 출력해서 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELET는 번호, 이름, 학년, 포인트이다.
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 모든 학생이기 때문에 적지 않는다.
   ODER BY를 사용하고 학년을 오름차순으로 정렬해야한다. +오름차순 정렬은 asc 내림차순 정렬은 desc
   하지만 조건이 두가지이다. 오름차순으로 학년을 정렬할 것, 학년이 동일할 경우 포인트를 내림차순으로 정렬할 것 이다.
   우선순위는 학년이고, 차순위는 포인트이다. 
   +우선순위 정렬하는 방법은 기입 순서이다. 선기입하면 조건이 먼저 실행된다. 학년을 선기입, 포인트를 후기입한다.
5.답
select no,name,grade, point
from users
order by grade asc, point desc;


11. 1학년중에서 점수가 2번째와 3번째로 높은 학생의 이름, 주소, 점수, 주민번호를 출력하세요.
12.  현재의 점수에서 -10을 보정한 결과 80점 이상인 사람의 이름과 점수, 보정한 결과 점수를 출력하세요.​



* 본인을 한번 칭찬하세요 목표달성..
* 출력 형태는 임의대로 결정하되 결과값이 정확하면 됩니다 
​









추가문제  -- 오라클 함수를 검색해 보세요







13. 학생은 총 몇명입니까?

(순서)
1. 결과값을 나타내야 한다.-튜플을 CRVD연산하는 DML로 분류한다.
2. 결과값 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 총 몇명이다. 총 칼럼의 개수를 계산하는 방법은 COUNT 함수를 사용하는 것이다. + SELECT COUNT(대상칼럼)
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 모든 학생이기 때문에 적지 않는다.
5.답
select count(*)
from users;











14. 1학년은 총 몇명입니까?

(순서)
1. 결과값을 나타내야 한다.-튜플을 CRVD연산하는 DML로 분류한다.
2. 결과값 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 총 몇명이다. 총 칼럼의 개수를 계산하는 방법은 COUNT 함수를 사용하는 것이다. + 총 개수를 물었으니 *를 대입한다. SELECT COUNT(대상칼럼)
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 1학년 학생이다.
5.답
select count(*)
from users
where grade=1;






15. 모든 학생의 이름과 학년을 출력하시오. 단 이름은 모두 소문자로만 출력하시오.

(순서)
1. 결과값을 나타내야 한다.-튜플을 CRVD연산하는 DML로 분류한다.
2. 결과값 나타내는 것이기 때문에 SELECT를 사용한다.
3. SELECT : 선택할 컬럼 or 표시할 내용
   FROM : 대상 테이블
   WHERE : 튜플을 선정하는 조건
4. SELECT는 이름과 학년을 출력한다. 하지만 출력 조건이 있는데, 이름은 모두 소문자로만 출력해야 하는 것이다. 
   +소문자로 표시하는 함수는 LOWER('칼럼명')이다. 모두 대문자로 표시하는 것은 UPPER('칼럼명')
   FROM은 대상 테이블이고 대상 테이블명은 users, 
   WHERE은 필요없다. 모든 학생을 원했기 때문이다.
5.답
select grade, LOWER(name)
from users;








16. 2학년 학생의 이름과 학년을 출력하시오. 보안을 위해서 주소는 앞글자 2글자만 출력하시오.

(순서)
1. 결과값을 나타내야 한다.-튜플을 CRVD연산하는 DML로 분류한다.
2. 결과값 나타내는 것이기 때문에 SELECT를 사용한다. 
3. SELECT출력할 것: 이름, 학년, 주소
                           보안을 위해 앞2글자만 출력하는 건?>함수를 쓴다. >무슨? SUBSTR()함수를 사용한다.
4. WHERE: 어디에서?2학년에서
5.답
SELECT name, grade, addr, substr(addr,1,2)
FROM users
WHERE grade=2;

NAME       G ADDR       SUBS
---------- - ---------- ----
leesu      2 suwon city su
Leechan    2 incheon    in














17. 모든 학생의 점수의 일의 자리는 절삭하시오. - 반올림 없음 (단, 원본 데이터에 반영되지 않습니다.)


1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 점수 (일의 자리에서 절삭한 값)
                  절삭하는 함수는  trunc()
3. WHERE: 모든학생이라고 했으므로 튜플을 선택하는 조건은 붙지 않는다.
4. SELECT 절에 대입
SELECT trunc(point,1)
FROM users ;

TRUNC(POINT,1)
--------------
          99.1
            89
          88.2
          77.6
          60.2
          90.1
          89.9
          99.3
          79.1
          79.9
          85.3

TRUNC(POINT,1)
--------------
          82.1






18. 모든 학생의 점수를 반올림하여 출력하시오. (단, 원본 데이터에 반영되지 않습니다.)

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 점수 (반올림 한 값 임의로 일의 자리에서 반올림했다고 가정하자.)
                  반올림하는 함수는  around()
3. WHERE: 모든학생이라고 했으므로 튜플을 선택하는 조건은 붙지 않는다.
4. SELECT 절에 대입
SELECT round(point,1)
FROM users;

ROUND(POINT,1)
--------------
          99.1
            89
          88.2
          77.6
          60.2
          90.1
            90
          99.3
          79.1
          79.9
          85.3

ROUND(POINT,1)
--------------
          82.1







19. 2학년은 모두 몇명입니까?


1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 모두 몇 명>개수를 세는 함수인 count()함수를 사용한다.
3. WHERE : 
4. SELECT 절에 대입
SELECT count(*)
FROM users
WHERE grade=2;

  COUNT(*)
----------
         2



















20. 1학년중 80점 이상은 몇명입니까?

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 몇 명>개수를 세는 함수인 count()함수를 사용한다.
3. WHERE : (1) 80점 이상인 점수
                    점수 >= 80
                (2) 1학년 
                     grade =1 
  

4. SELECT 절에 대입
SELECT count(*)
FROM users
WHERE point >= 80 and grade =1 ;

  COUNT(*)
----------
         2











21. 3학년의 평균은 몇점입니까?

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 평균 점수
3. WHERE : (1)3학년
                   grade=3
4. SELECT 절에 대입
SELECT avg(point)
FROM users
WHERE grade=3 ;

AVG(POINT)
----------
     93.13








22. 전체 학생 중 최고점은 몇점입니까?

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 최대값 점수 - 최대값을 구하는 함수>max()
3. WHERE : 전체학생이므로 사용하지 않는다.
4. SELECT 절에 대입
SELECT max(point)
FROM users;

MAX(POINT)
----------
     99.31


23. 2학년 중 가장 낮은 점수를 획득한 점수는 몇점입니까?
select min(point) as 가장낮은점수
from users
where grade=2;

select min(point)
from users
group by grade having grade=2;

select min(point)
from users
where grade=2
group by grade;

응용) 2학년 중 가장낮은 점수의 소수점 첫번째 자리로 반올림값은?
select round(min(point),1)
from users; 


못푸는 문제

24. 보안을 위해서 주소를 모두 출력하지 않고 앞의 세 글자만 출력하고 뒤에 *를 하나 붙힌다.
   (단, 원본 데이터에 반영되지 않습니다.)
   예)suwon  >> su*

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 주소 (앞의 세글자만 출력, 뒤에*를 하나 붙인다.)
                  글자 추출하는 함수는 substr()
                  *를 뒤에 붙이는 방법은 문자 ||(파이프) '*'이다.
3. WHERE : 전체학생이므로 사용하지 않는다. 
4. SELECT 절에 대입
SELECT substr(addr,1,3)||'*'
FROM users ;

SUBSTR(
-------
suw*
suw*
seo*
suw*
seo*
suw*
you*
you*
inc*
inc*
seo*

SUBSTR(
-------
*

25. 이름의 맨 앞에 *를 맨 뒤에도*를 붙혀서 출력한다. (단, 원본 데이터에 반영되지 않습니다.)


1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 이름 (이름의 앞에 * 뒤에 *를 하나 붙인다.)
                 *를 붙이는 방법은 문자 ||(파이프) '*'이다.
3. WHERE : 전체학생이므로 사용하지 않는다. 
4. SELECT 절에 대입
SELECT '*' ||name|| '*'
FROM users ;

'*'||NAME||'
------------
*kimsu*
*leesu*
*choihee*
*leesil*
*james*
*parksuji*
*kimrae*
*sangJin*
*Leechan*
*kimmi*
*ryusu*

'*'||NAME||'
------------
*Gosu*

26. 생년월일을 그대로 출력하지 말고
    xx 년 xx 월 xx 일 형식으로 출력한다. (단, 원본 데이터에 반영되지 않습니다. 성별은 무시한다)

1. 계산하여 나타내는 것은 DML>SELECT 명령어를 사용한다.
2. SELECT값 : 생년월일 (년,월,일을 각각의 숫자 뒤에 붙인다.)
                 글자 추출하는 함수는 substr()
                 '년','월','일'을 붙이는 방법은 문자 ||(파이프) 이다.
3. WHERE : 전체학생이므로 사용하지 않는다. 
4. SELECT 절에 대입
SELECT substr(jumin,1,2)||'년'||substr(jumin,3,2)||'월'||substr(jumin,5,2)||'일'
FROM users ;

SUBSTR(JUMIN,1,2)|
------------------
82년04월05일
97년08월05일
91년02월04일
85년04월05일
87년11월05일
88년04월05일
82년01월05일
99년04월20일
97년06월05일
81년05월05일
86년12월05일

SUBSTR(JUMIN,1,2)|
------------------
81년07월15일

27. 이름, 포인트, 학년, 생년월일, 성별을 추가한다. 성별은 생년월일로 판단하며 마지막 숫자가1이면 남
    2이면 여라고 표시한다. 


select name, point, grade, jumin,
decode (substr(jumin,8,1),1,'남',2,'여')
from users;
















